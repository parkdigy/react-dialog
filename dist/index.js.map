{"version":3,"file":"index.js","sources":["../src/DialogContext/DialogContext.types.ts","../src/DialogContext/DialogContext.ts","../node_modules/@pdg/react-hook/dist/index.esm.js","../src/AlertDialog/AlertDialog.types.ts","../src/Dialog/Dialog.types.ts","../src/Dialog/Dialog.styles.ts","../src/Dialog/Dialog.tsx","../src/DialogActionButton/DialogActionButton.tsx","../src/AlertDialog/AlertDialog.tsx","../src/ConfirmDialog/ConfirmDialog.types.ts","../src/ConfirmDialog/ConfirmDialog.tsx","../src/DialogContextProvider/DialogContextProvider.tsx","../src/uses/useDialog.ts","../src/uses/useAlertDialog.ts","../src/uses/useConfirmDialog.ts"],"sourcesContent":["import { ComponentClass, FunctionComponent } from 'react';\nimport { AlertDialogProps } from '../AlertDialog';\nimport { ConfirmDialogProps } from '../ConfirmDialog';\n\nexport interface DialogRequireProps {\n  onShow(): void;\n  onClose(): void;\n}\n\nexport type PushDialog<P extends DialogRequireProps = never, U extends P = P> = (\n  dialogComponent: FunctionComponent<U> | ComponentClass<U>,\n  props?: Partial<DialogRequireProps>\n) => void;\n\nexport interface DialogContextValue {\n  pushDialog: PushDialog;\n  alertDialog(props: AlertDialogProps): void;\n  confirmDialog(props: ConfirmDialogProps): void;\n}\n\n/* eslint-disable */\nexport const DialogContextDefaultValue: DialogContextValue = {\n  pushDialog() {},\n  alertDialog() {},\n  confirmDialog() {},\n};\n/* eslint-enable */\n","import { createContext } from 'react';\nimport { DialogContextDefaultValue, DialogContextValue } from './DialogContext.types';\n\nconst DialogContext = createContext<DialogContextValue>(DialogContextDefaultValue);\n\nexport default DialogContext;\n","import {useRef,useEffect,useState,useCallback,useLayoutEffect}from'react';function useFirstSkipEffect(effect, deps) {\r\n    var firstRef = useRef(true);\r\n    useEffect(function () {\r\n        if (firstRef.current) {\r\n            firstRef.current = false;\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    }, deps);\r\n}var isSame = function (v1, v2) {\r\n    if (v1 === v2)\r\n        return true;\r\n    if (typeof v1 !== typeof v2)\r\n        return false;\r\n    if (v1 == null || v2 == null)\r\n        return false;\r\n    if (Array.isArray(v1) && Array.isArray(v2)) {\r\n        if (v1.length !== v2.length)\r\n            return false;\r\n        for (var i = 0; i < v1.length; i += 1) {\r\n            if (v1[i] !== v2[i])\r\n                return false;\r\n        }\r\n    }\r\n    else {\r\n        return v1 === v2;\r\n    }\r\n    return true;\r\n};function useAutoUpdateState(p1, p2) {\r\n    var state = typeof p1 === 'function' ? undefined : p1;\r\n    var finalStateCallback = typeof p1 === 'function' ? p1 : p2;\r\n    var _a = useState(0), setUpdateKey = _a[1];\r\n    var _initState = useState(function () {\r\n        return finalStateCallback ? finalStateCallback(state) : state;\r\n    })[0];\r\n    var _state = useRef(_initState);\r\n    var forceUpdate = useCallback(function () {\r\n        setUpdateKey(function (updateKey) { return updateKey + 1; });\r\n    }, []);\r\n    useFirstSkipEffect(function () {\r\n        var newState = finalStateCallback ? finalStateCallback(state) : state;\r\n        if (!isSame(newState, _state.current)) {\r\n            _state.current = newState;\r\n            forceUpdate();\r\n        }\r\n    }, [state]);\r\n    useFirstSkipEffect(function () {\r\n        var newState = finalStateCallback ? finalStateCallback(_state.current) : _state.current;\r\n        if (!isSame(newState, _state.current)) {\r\n            _state.current = newState;\r\n            forceUpdate();\r\n        }\r\n    }, [finalStateCallback]);\r\n    var setState = useCallback(function (newState) {\r\n        var finalNewState = typeof newState === 'function' ? newState(_state.current) : newState;\r\n        if (!isSame(_state.current, finalNewState)) {\r\n            _state.current = finalNewState;\r\n            forceUpdate();\r\n        }\r\n    }, []);\r\n    return [_state.current, setState];\r\n}function useFirstSkipLayoutEffect(effect, deps) {\r\n    var firstRef = useRef(true);\r\n    useLayoutEffect(function () {\r\n        if (firstRef.current) {\r\n            firstRef.current = false;\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    }, deps);\r\n}function useAutoUpdateLayoutState(p1, p2) {\r\n    var state = typeof p1 === 'function' ? undefined : p1;\r\n    var finalStateCallback = typeof p1 === 'function' ? p1 : p2;\r\n    var _a = useState(0), setUpdateKey = _a[1];\r\n    var _initState = useState(function () {\r\n        return finalStateCallback ? finalStateCallback(state, 0) : state;\r\n    })[0];\r\n    var _state = useRef(_initState);\r\n    var forceUpdate = useCallback(function () {\r\n        setUpdateKey(function (updateKey) { return updateKey + 1; });\r\n    }, []);\r\n    useFirstSkipLayoutEffect(function () {\r\n        var newState = finalStateCallback ? finalStateCallback(state) : state;\r\n        if (!isSame(newState, _state.current)) {\r\n            _state.current = newState;\r\n            forceUpdate();\r\n        }\r\n    }, [state]);\r\n    useFirstSkipLayoutEffect(function () {\r\n        var newState = finalStateCallback ? finalStateCallback(_state.current) : _state.current;\r\n        if (!isSame(newState, _state.current)) {\r\n            _state.current = newState;\r\n            forceUpdate();\r\n        }\r\n    }, [finalStateCallback]);\r\n    var setState = useCallback(function (newState) {\r\n        var finalNewState = typeof newState === 'function' ? newState(_state.current) : newState;\r\n        if (!isSame(_state.current, finalNewState)) {\r\n            _state.current = finalNewState;\r\n            forceUpdate();\r\n        }\r\n    }, []);\r\n    return [_state.current, setState];\r\n}export{useAutoUpdateLayoutState,useAutoUpdateState,useFirstSkipEffect,useFirstSkipLayoutEffect};//# sourceMappingURL=index.esm.js.map\n","import React, { ReactNode } from 'react';\nimport { ButtonProps } from '@mui/material';\nimport { DialogCommands, DialogProps } from '../Dialog';\n\nexport interface AlertDialogCommands extends Omit<DialogCommands, 'scrollToTop'> {}\n\nexport type AlertDialogCommandsRefFunction = (commands: AlertDialogCommands | undefined) => void;\n\nexport interface AlertDialogProps\n  extends Omit<\n    DialogProps,\n    'commandsRef' | 'actions' | 'autoClose' | 'backdropClose' | 'escapeClose' | 'onRequestClose'\n  > {\n  commandsRef?: React.MutableRefObject<AlertDialogCommands | undefined> | AlertDialogCommandsRefFunction;\n  confirmButtonLabel?: ReactNode;\n  confirmButtonProps?: Omit<ButtonProps, 'children' | 'onClick'>;\n}\n\nexport const AlertDialogDefaultProps: Pick<AlertDialogProps, 'color' | 'confirmButtonLabel'> = {\n  color: 'primary',\n  confirmButtonLabel: '확인',\n};\n","import React, { ReactNode } from 'react';\nimport { DialogProps as _DialogProps, DialogTitleProps } from '@mui/material';\n\nexport interface DialogCommands {\n  getId(): string;\n  close(): void;\n  scrollToTop(): void;\n}\n\nexport type DialogCommandsRefFunction = (commands: DialogCommands | undefined) => void;\n\nexport interface DialogProps extends Omit<_DialogProps, 'ref' | 'open' | 'title' | 'aria-labelledby' | 'onClose'> {\n  commandsRef?: React.MutableRefObject<DialogCommands | undefined> | DialogCommandsRefFunction;\n  content: ReactNode;\n  color?: 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning';\n  titleIcon?: string;\n  title?: ReactNode;\n  titleProps?: Partial<Omit<DialogTitleProps, 'children'>>;\n  actions?: ReactNode;\n  hideClose?: boolean;\n  autoClose?: boolean;\n  backdropClose?: boolean;\n  escapeClose?: boolean;\n  fullHeight?: boolean;\n  onShow?(): void;\n  onRequestClose?(): void;\n  onClose?(): void;\n}\n\nexport const DialogDefaultProps: Pick<DialogProps, 'color'> = {\n  color: 'primary',\n};\n","import { Dialog, DialogTitle, DialogContent, DialogActions, IconButton, styled } from '@mui/material';\n\nexport const StyledDialog = styled(Dialog)``;\n\nexport const StyledDialogTitle = styled(DialogTitle)(() => ({\n  position: 'relative',\n  paddingRight: 60,\n  paddingTop: 10,\n  paddingBottom: 10,\n  width: '100%',\n}));\n\nexport const StyleDialogTitleCloseButton = styled(IconButton)(({ theme }) => ({\n  position: 'absolute',\n  right: 8,\n  top: 5,\n  color: theme.palette.grey[500],\n}));\n\nexport const StyledDialogContent = styled(DialogContent)``;\n\nexport const StyledDialogActions = styled(DialogActions)`\n  padding-left: 20px;\n  padding-right: 15px;\n`;\n","import React, { useCallback, useEffect, useId, useLayoutEffect, useRef, useState } from 'react';\nimport { useTheme, Icon, Box } from '@mui/material';\nimport { DialogProps as Props, DialogDefaultProps, DialogCommands } from './Dialog.types';\nimport {\n  StyledDialog,\n  StyledDialogTitle,\n  StyledDialogContent,\n  StyleDialogTitleCloseButton,\n  StyledDialogActions,\n} from './Dialog.styles';\nimport { useAutoUpdateState } from '@pdg/react-hook';\n\nconst Dialog = React.forwardRef<DialogCommands, Props>(\n  (\n    {\n      commandsRef,\n      content,\n      color,\n      titleIcon: initTitleIcon,\n      title,\n      titleProps,\n      actions,\n      hideClose,\n      autoClose,\n      backdropClose,\n      escapeClose,\n      fullHeight,\n      onShow,\n      onRequestClose,\n      onClose,\n      ...otherProps\n    },\n    ref\n  ) => {\n    // ID --------------------------------------------------------------------------------------------------------------\n\n    const id = useId();\n\n    // Theme -----------------------------------------------------------------------------------------------------------\n\n    const theme = useTheme();\n\n    // Ref -------------------------------------------------------------------------------------------------------------\n\n    const contentRef = useRef<HTMLDivElement>(null);\n\n    // State -----------------------------------------------------------------------------------------------------------\n\n    const [open, setOpen] = useState(true);\n    const [titleId] = useState(`dialog-title-${id}`);\n    const [titleIcon] = useAutoUpdateState<string | undefined>(\n      useCallback(() => {\n        return initTitleIcon?.replace(/[A-Z]/g, (letter, idx) => `${idx > 0 ? '_' : ''}${letter.toLowerCase()}`);\n      }, [initTitleIcon])\n    );\n\n    const [textColor] = useAutoUpdateState<string>(\n      useCallback(() => {\n        return theme.palette[color || 'primary'].contrastText;\n      }, [color])\n    );\n\n    // Effect ----------------------------------------------------------------------------------------------------------\n\n    useEffect(() => {\n      if (onShow) onShow();\n    }, []);\n\n    // Function - close -------------------------------------------------------------------------------------------------\n\n    const close = useCallback(() => {\n      setOpen(false);\n      setTimeout(() => {\n        if (onClose) onClose();\n      }, theme.transitions.duration.leavingScreen);\n    }, [onClose]);\n\n    const scrollToTop = useCallback(() => {\n      contentRef.current?.scrollTo({ top: 0 });\n    }, [contentRef]);\n\n    // State - commands ------------------------------------------------------------------------------------------------\n\n    const [commands] = useAutoUpdateState<DialogCommands>(\n      useCallback(\n        () => ({\n          getId: () => id,\n          close,\n          scrollToTop,\n        }),\n        [id, close, scrollToTop]\n      )\n    );\n\n    // Effect - Commands -----------------------------------------------------------------------------------------------\n\n    useLayoutEffect(() => {\n      if (ref) {\n        if (typeof ref === 'function') {\n          ref(commands);\n        } else {\n          ref.current = commands;\n        }\n      }\n\n      if (commandsRef) {\n        if (typeof commandsRef === 'function') {\n          commandsRef(commands);\n        } else {\n          commandsRef.current = commands;\n        }\n      }\n\n      return () => {\n        if (ref) {\n          if (typeof ref === 'function') {\n            ref(null);\n          } else {\n            ref.current = null;\n          }\n        }\n\n        if (commandsRef) {\n          if (typeof commandsRef === 'function') {\n            commandsRef(undefined);\n          } else {\n            commandsRef.current = undefined;\n          }\n        }\n      };\n    }, [ref, commandsRef, commands]);\n\n    // Event Handler ---------------------------------------------------------------------------------------------------\n\n    const handleClose = useCallback(\n      (e: object, reason: string) => {\n        switch (reason) {\n          case 'backdropClick':\n            if (backdropClose) {\n              if (autoClose) {\n                close();\n              } else {\n                if (onRequestClose) onRequestClose();\n              }\n            }\n            break;\n          case 'escapeKeyDown':\n            if (escapeClose) {\n              if (autoClose) {\n                close();\n              } else {\n                if (onRequestClose) onRequestClose();\n              }\n            }\n            break;\n        }\n      },\n      [close, autoClose, backdropClose, escapeClose, onRequestClose]\n    );\n\n    const handleCloseClick = useCallback(() => {\n      if (autoClose) {\n        close();\n      } else {\n        if (onRequestClose) onRequestClose();\n      }\n    }, [autoClose, onRequestClose, close]);\n\n    // Render ----------------------------------------------------------------------------------------------------------\n\n    return (\n      <StyledDialog\n        className={`color-${color}`}\n        open={open}\n        aria-labelledby={titleId}\n        onClose={handleClose}\n        {...otherProps}\n      >\n        {title && (\n          <StyledDialogTitle {...titleProps}>\n            {(titleIcon || title) && (\n              <Box style={{ display: 'flex', fontSize: '17px' }}>\n                {titleIcon && (\n                  <Box style={{ display: 'flex', alignItems: 'center', marginRight: 7 }}>\n                    <Icon style={{ fontSize: '22px' }}>{titleIcon}</Icon>\n                  </Box>\n                )}\n                {title && <Box style={{ display: 'flex', alignItems: 'center' }}>{title}</Box>}\n              </Box>\n            )}\n            {!hideClose && (\n              <StyleDialogTitleCloseButton\n                className='dialog-close-btn'\n                aria-label='close'\n                style={{ color: textColor }}\n                onClick={handleCloseClick}\n              >\n                <Icon>close</Icon>\n              </StyleDialogTitleCloseButton>\n            )}\n          </StyledDialogTitle>\n        )}\n        <StyledDialogContent\n          ref={contentRef}\n          style={{\n            height: fullHeight ? '100vh' : undefined,\n            paddingBottom: actions ? 15 : undefined,\n          }}\n        >\n          {content}\n        </StyledDialogContent>\n        {actions && <StyledDialogActions>{actions}</StyledDialogActions>}\n      </StyledDialog>\n    );\n  }\n);\n\nDialog.displayName = 'Dialog';\nDialog.defaultProps = DialogDefaultProps;\n\nexport default Dialog;\n","import React, { CSSProperties, useCallback } from 'react';\nimport { Button } from '@mui/material';\nimport { DialogActionButtonProps } from './DialogActionButton.types';\nimport { useAutoUpdateState } from '@pdg/react-hook';\n\nconst DEFAULT_STYLE: CSSProperties = {\n  paddingLeft: 15,\n  paddingRight: 15,\n  minWidth: 0,\n};\n\nconst DialogActionButton: React.FC<DialogActionButtonProps> = ({ variant, style: initStyle, ...otherProps }) => {\n  // State -----------------------------------------------------------------------------------------------------------\n\n  const [style] = useAutoUpdateState<CSSProperties>(\n    useCallback(() => {\n      if (initStyle) {\n        return { DEFAULT_STYLE, ...initStyle };\n      } else {\n        return DEFAULT_STYLE;\n      }\n    }, [initStyle])\n  );\n\n  // Render ----------------------------------------------------------------------------------------------------------\n\n  return <Button variant={variant || 'text'} style={style} {...otherProps} />;\n};\n\nexport default DialogActionButton;\n","import React, { useCallback, useLayoutEffect, useRef } from 'react';\nimport { AlertDialogCommands, AlertDialogProps as Props, AlertDialogDefaultProps } from './AlertDialog.types';\nimport { Dialog, DialogCommands } from '../Dialog';\nimport { useAutoUpdateState } from '@pdg/react-hook';\nimport { DialogActionButton } from '../DialogActionButton';\n\nconst AlertDialog = React.forwardRef<AlertDialogCommands, Props>(\n  ({ style: initStyle, commandsRef, confirmButtonLabel, confirmButtonProps, onShow, onClose, ...props }, ref) => {\n    // Ref -------------------------------------------------------------------------------------------------------------\n\n    const dialogRef = useRef<DialogCommands>(null);\n\n    // State -----------------------------------------------------------------------------------------------------------\n\n    const [style] = useAutoUpdateState<Props['style']>(\n      useCallback(() => {\n        return { zIndex: 1399, initStyle };\n      }, [initStyle])\n    );\n\n    // Function - close --------------------------------------------------------------------------------------------------\n\n    const getId = useCallback((): string => {\n      return dialogRef.current?.getId() || '';\n    }, [dialogRef]);\n\n    const close = useCallback(() => {\n      dialogRef.current?.close();\n    }, [dialogRef]);\n\n    // State - commands --------------------------------------------------------------------------------------------------\n\n    const [commands] = useAutoUpdateState<AlertDialogCommands>(\n      useCallback(\n        () => ({\n          getId,\n          close,\n        }),\n        [getId, close]\n      )\n    );\n\n    // Commands ----------------------------------------------------------------------------------------------------------\n\n    useLayoutEffect(() => {\n      if (ref) {\n        if (typeof ref === 'function') {\n          ref(commands || null);\n        } else {\n          ref.current = commands || null;\n        }\n      }\n\n      if (commandsRef) {\n        if (typeof commandsRef === 'function') {\n          commandsRef(commands);\n        } else {\n          commandsRef.current = commands;\n        }\n      }\n\n      return () => {\n        if (ref) {\n          if (typeof ref === 'function') {\n            ref(null);\n          } else {\n            ref.current = null;\n          }\n        }\n\n        if (commandsRef) {\n          if (typeof commandsRef === 'function') {\n            commandsRef(undefined);\n          } else {\n            commandsRef.current = undefined;\n          }\n        }\n      };\n    }, [ref, commandsRef, commands]);\n\n    // Event Handler ---------------------------------------------------------------------------------------------------\n\n    const handleShow = useCallback(() => {\n      if (onShow) onShow();\n    }, [onShow]);\n\n    const handleClose = useCallback(() => {\n      if (onClose) onClose();\n    }, [onClose]);\n\n    // Render ----------------------------------------------------------------------------------------------------------\n\n    return (\n      <Dialog\n        ref={dialogRef}\n        autoClose\n        escapeClose\n        style={style}\n        onShow={handleShow}\n        onClose={handleClose}\n        {...props}\n        actions={\n          <DialogActionButton variant='text' {...confirmButtonProps} onClick={close}>\n            {confirmButtonLabel}\n          </DialogActionButton>\n        }\n      />\n    );\n  }\n);\n\nAlertDialog.displayName = 'AlertDialog';\nAlertDialog.defaultProps = AlertDialogDefaultProps;\n\nexport default AlertDialog;\n","import React, { ReactNode } from 'react';\nimport { DialogCommands, DialogProps } from '../Dialog';\nimport { ButtonProps } from '@mui/material';\n\nexport interface ConfirmDialogCommands extends Omit<DialogCommands, 'scrollToTop'> {}\n\nexport type ConfirmDialogCommandsRefFunction = (commands: ConfirmDialogCommands | undefined) => void;\n\nexport interface ConfirmDialogProps\n  extends Omit<\n    DialogProps,\n    'commandsRef' | 'actions' | 'autoClose' | 'backdropClose' | 'escapeClose' | 'onRequestClose'\n  > {\n  commandsRef?: React.MutableRefObject<ConfirmDialogCommands | undefined> | ConfirmDialogCommandsRefFunction;\n  confirmButtonLabel?: ReactNode;\n  confirmButtonProps?: Omit<ButtonProps, 'children' | 'onClick'>;\n  cancelButtonLabel?: ReactNode;\n  cancelButtonProps?: Omit<ButtonProps, 'children' | 'onClick'>;\n  onConfirm?(commands: ConfirmDialogCommands): void;\n  onCancel?(commands: ConfirmDialogCommands): void;\n}\n\nexport const ConfirmDialogDefaultProps: Pick<ConfirmDialogProps, 'color' | 'confirmButtonLabel' | 'cancelButtonLabel'> =\n  {\n    color: 'primary',\n    confirmButtonLabel: '확인',\n    cancelButtonLabel: '취소',\n  };\n","import React, { useCallback, useLayoutEffect, useRef } from 'react';\nimport { ConfirmDialogCommands, ConfirmDialogProps as Props, ConfirmDialogDefaultProps } from './ConfirmDialog.types';\nimport { Dialog, DialogCommands } from '../Dialog';\nimport { DialogActionButton } from '../DialogActionButton';\nimport { useAutoUpdateState } from '@pdg/react-hook';\nimport { Typography } from '@mui/material';\n\nconst ConfirmDialog = React.forwardRef<ConfirmDialogCommands, Props>(\n  (\n    {\n      style: initStyle,\n      commandsRef,\n      color,\n      confirmButtonLabel,\n      confirmButtonProps,\n      cancelButtonLabel,\n      cancelButtonProps,\n      onShow,\n      onClose,\n      onConfirm,\n      onCancel,\n      ...props\n    },\n    ref\n  ) => {\n    // Ref -------------------------------------------------------------------------------------------------------------\n\n    const dialogRef = useRef<DialogCommands>(null);\n\n    // State -----------------------------------------------------------------------------------------------------------\n\n    const [style] = useAutoUpdateState<Props['style']>(\n      useCallback(() => {\n        return { zIndex: 1399, initStyle };\n      }, [initStyle])\n    );\n\n    // Function - close --------------------------------------------------------------------------------------------------\n\n    const getId = useCallback((): string => {\n      return dialogRef.current?.getId() || '';\n    }, [dialogRef]);\n\n    const close = useCallback(() => {\n      dialogRef.current?.close();\n    }, [dialogRef]);\n\n    // State - commands --------------------------------------------------------------------------------------------------\n\n    const [commands] = useAutoUpdateState<ConfirmDialogCommands>(\n      useCallback(() => {\n        return {\n          getId,\n          close,\n        };\n      }, [getId, close])\n    );\n\n    // Commands ----------------------------------------------------------------------------------------------------------\n\n    useLayoutEffect(() => {\n      if (ref) {\n        if (typeof ref === 'function') {\n          ref(commands || null);\n        } else {\n          ref.current = commands || null;\n        }\n      }\n\n      if (commandsRef) {\n        if (typeof commandsRef === 'function') {\n          commandsRef(commands);\n        } else {\n          commandsRef.current = commands;\n        }\n      }\n\n      return () => {\n        if (ref) {\n          if (typeof ref === 'function') {\n            ref(null);\n          } else {\n            ref.current = null;\n          }\n        }\n\n        if (commandsRef) {\n          if (typeof commandsRef === 'function') {\n            commandsRef(undefined);\n          } else {\n            commandsRef.current = undefined;\n          }\n        }\n      };\n    }, [ref, commandsRef, commands]);\n\n    // Event Handler ---------------------------------------------------------------------------------------------------\n\n    const handleShow = useCallback(() => {\n      if (onShow) onShow();\n    }, [onShow, commands]);\n\n    const handleClose = useCallback(() => {\n      if (onClose) onClose();\n    }, [onClose, commands]);\n\n    const handleCancelClick = useCallback(() => {\n      if (onCancel) onCancel(commands);\n    }, []);\n\n    const handleConfirmClick = useCallback(() => {\n      if (onConfirm) onConfirm(commands);\n    }, [onConfirm, commands, close]);\n\n    // Render ----------------------------------------------------------------------------------------------------------\n\n    return (\n      <Dialog\n        ref={dialogRef}\n        color={color}\n        escapeClose={true}\n        style={style}\n        onShow={handleShow}\n        onClose={handleClose}\n        onRequestClose={handleCancelClick}\n        {...props}\n        actions={\n          <>\n            <DialogActionButton variant='text' {...cancelButtonProps} onClick={handleCancelClick}>\n              <Typography fontSize='inherit' style={{ color: '#6f6f6f' }}>\n                {cancelButtonLabel}\n              </Typography>\n            </DialogActionButton>\n            <DialogActionButton variant='text' color={color} {...confirmButtonProps} onClick={handleConfirmClick}>\n              {confirmButtonLabel}\n            </DialogActionButton>\n          </>\n        }\n      />\n    );\n  }\n);\n\nConfirmDialog.displayName = 'ConfirmDialog';\nConfirmDialog.defaultProps = ConfirmDialogDefaultProps;\n\nexport default ConfirmDialog;\n","import React, { ReactNode, useCallback, useRef, useState } from 'react';\nimport { DialogContextProviderProps as Props } from './DialogContextProvider.types';\nimport {\n  DialogContext,\n  DialogContextDefaultValue,\n  DialogContextValue,\n  DialogRequireProps,\n  PushDialog,\n} from '../DialogContext';\nimport { useAutoUpdateState } from '@pdg/react-hook';\nimport { AlertDialog, AlertDialogCommands, AlertDialogProps } from '../AlertDialog';\nimport { ConfirmDialog, ConfirmDialogCommands, ConfirmDialogProps } from '../ConfirmDialog';\n\nconst DialogContextProvider: React.FC<Props> = ({ children }) => {\n  // Ref -------------------------------------------------------------------------------------------------------------\n\n  const dialogKeyRef = useRef(0);\n\n  // State -------------------------------------------------------------------------------------------------------------\n\n  const [dialogs, setDialogs] = useState<ReactNode[]>([]);\n  const [dialogIds] = useState<{ [key: string]: any }>({});\n\n  // Event Handler ---------------------------------------------------------------------------------------------------\n\n  const handleShow = useCallback((dialog: JSX.Element, id: string, onShow?: (id: string) => void) => {\n    dialogIds[id] = dialog;\n    if (onShow) onShow(id);\n  }, []);\n\n  const handleClose = useCallback(\n    (id: string, onClose?: (id: string) => void) => {\n      const dialog = dialogIds[id];\n      if (dialog) {\n        setDialogs((dialogs) => {\n          const idx = dialogs.indexOf(dialog);\n          if (idx > -1) {\n            const newDialogs = [...dialogs];\n            newDialogs.splice(idx, 1);\n            return newDialogs;\n          } else {\n            return dialogs;\n          }\n        });\n\n        delete dialogIds[id];\n      }\n      if (onClose) onClose(id);\n    },\n    [dialogIds]\n  );\n\n  // Function - alertDialog --------------------------------------------------------------------------------------------\n\n  const alertDialog = useCallback((props: AlertDialogProps) => {\n    dialogKeyRef.current += 1;\n\n    const { onShow, onClose, ...otherProps } = props;\n\n    let dialogId: string;\n\n    const dialog = (\n      <AlertDialog\n        ref={(commands: AlertDialogCommands) => {\n          if (commands) {\n            dialogId = commands.getId();\n          }\n        }}\n        key={dialogKeyRef.current}\n        {...otherProps}\n        onShow={() => {\n          handleShow(dialog, dialogId, onShow);\n        }}\n        onClose={() => {\n          handleClose(dialogId, onClose);\n        }}\n      />\n    );\n\n    setDialogs((dialogs) => {\n      return [...dialogs, dialog];\n    });\n  }, []);\n\n  // Function - confirmDialog ------------------------------------------------------------------------------------------\n\n  const confirmDialog = useCallback((props: ConfirmDialogProps) => {\n    dialogKeyRef.current += 1;\n\n    const { onShow, onClose, ...otherProps } = props;\n\n    let dialogId: string;\n\n    const dialog = (\n      <ConfirmDialog\n        ref={(commands: ConfirmDialogCommands) => {\n          if (commands) {\n            dialogId = commands.getId();\n          }\n        }}\n        key={dialogKeyRef.current}\n        {...otherProps}\n        onShow={() => handleShow(dialog, dialogId, onShow)}\n        onClose={() => handleClose(dialogId, onClose)}\n      />\n    );\n\n    setDialogs((dialogs) => {\n      return [...dialogs, dialog];\n    });\n  }, []);\n\n  // Function - pushDialog ---------------------------------------------------------------------------------------------\n\n  const pushDialog = useCallback<PushDialog>((dialogComponent, props?) => {\n    dialogKeyRef.current += 1;\n    const dialogId = `dig_${dialogKeyRef.current}`;\n    const dialog = React.createElement<DialogRequireProps>(dialogComponent as any, {\n      key: dialogKeyRef.current,\n      ...props,\n      onShow: () => {\n        handleShow(dialog, dialogId, props?.onShow);\n      },\n      onClose: () => {\n        handleClose(dialogId, props?.onClose);\n      },\n    });\n\n    setDialogs((dialogs) => {\n      return [...dialogs, dialog];\n    });\n  }, []);\n\n  // State - value -----------------------------------------------------------------------------------------------------\n\n  const [value] = useAutoUpdateState<DialogContextValue>(\n    DialogContextDefaultValue,\n    useCallback((): DialogContextValue => {\n      return { pushDialog, alertDialog, confirmDialog };\n    }, [alertDialog])\n  );\n\n  // Render ----------------------------------------------------------------------------------------------------------\n\n  return (\n    <DialogContext.Provider value={value}>\n      {children}\n      {dialogs}\n    </DialogContext.Provider>\n  );\n};\n\nexport default DialogContextProvider;\n","import { ComponentClass, FunctionComponent, useCallback, useContext } from 'react';\nimport { DialogContext, DialogRequireProps } from '../DialogContext';\n\nexport default function useDialog<P extends Partial<DialogRequireProps> = never, U extends P = P>(\n  dialogComponent: FunctionComponent<U> | ComponentClass<U>\n): (props: Omit<U, keyof DialogRequireProps> & Partial<DialogRequireProps>) => void {\n  const value = useContext(DialogContext);\n  if (value === undefined) {\n    throw new Error('useDialog should be used within DialogContext.Provider');\n  }\n\n  return useCallback(\n    (props) => {\n      value.pushDialog(dialogComponent as any, props);\n    },\n    [value, dialogComponent]\n  );\n}\n","import DialogContext from '../DialogContext/DialogContext';\nimport { AlertDialogProps } from '../AlertDialog';\nimport { useContext } from 'react';\n\nexport default function useAlertDialog(): (props: AlertDialogProps) => void {\n  const value = useContext(DialogContext);\n  if (value === undefined) {\n    throw new Error('useAlertDialog should be used within DialogContext.Provider');\n  }\n  return value.alertDialog;\n}\n","import DialogContext from '../DialogContext/DialogContext';\nimport { ConfirmDialogProps } from '../ConfirmDialog';\nimport { useContext } from 'react';\n\nexport default function useConfirmDialog(): (props: ConfirmDialogProps) => void {\n  const value = useContext(DialogContext);\n  if (value === undefined) {\n    throw new Error('useConfirmDialog should be used within DialogContext.Provider');\n  }\n  return value.confirmDialog;\n}\n"],"names":["createContext","useRef","useEffect","useState","useCallback","styled","Dialog","DialogTitle","IconButton","DialogContent","DialogActions","React","useId","useTheme","useLayoutEffect","Box","Icon","Button","Typography","useContext"],"mappings":"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"}